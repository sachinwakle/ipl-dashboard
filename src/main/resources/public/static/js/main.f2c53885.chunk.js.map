{"version":3,"sources":["components/TeamTile.js","pages/HomePage.js","components/MatchDetailsCard.js","components/YearSelector.js","pages/MatchPage.js","components/MatchSmallCard.js","pages/TeamPage.js","App.js","reportWebVitals.js","index.js"],"names":["TeamTile","teamName","className","to","HomePage","useState","teams","setTeams","useEffect","a","fetch","process","response","json","teamData","map","team","id","MatchDetailsCard","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","YearSelector","years","i","push","year","MatchPage","matches","setMatches","useParams","matchData","MatchSmallCard","TeamPage","setTeam","data","title","value","totalMatches","totalWins","color","slice","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c53885.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./TeamTile.scss\";\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n  return (\r\n    <div className=\"TeamTile\">\r\n      <h1>\r\n        <Link to={`/teams/${teamName}`}>{teamName}</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TeamTile } from \"../components/TeamTile\";\r\nimport \"./HomePage.scss\";\r\n\r\nexport const HomePage = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n\r\n      const teamData = await response.json();\r\n      setTeams(teamData);\r\n    })();\r\n  }, []);\r\n\r\n  if (!teams) {\r\n    return <h1>No Teams Available</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n        <h1 className=\"app-name\">IPL Dashboard</h1>\r\n      </div>\r\n      <div className=\"team-grid\">\r\n        {teams.map((team) => (\r\n          <TeamTile teamName={team.teamName} key={team.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MatchDetailsCard.scss\";\r\n\r\nexport const MatchDetailsCard = ({ match, teamName }) => {\r\n  if (!match) return null;\r\n\r\n  const otherTeam = teamName === match.team1 ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isMatchWon ? \"MatchDetailsCard won-card\" : \"MatchDetailsCard lost-card\"\r\n      }\r\n    >\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1>\r\n          <Link to={otherTeamRoute}>{otherTeam}</Link>\r\n        </h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-winner\">\r\n          {match.matchWinner} won by {match.resultMargin} {match.result}\r\n        </h3>\r\n      </div>\r\n      <div className=\"additional-details\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Secons Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>\r\n          {match.umpire1}, {match.umpire2}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./YearSelector.scss\";\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n  let years = [];\r\n  const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n  const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n  for (let i = startYear; i <= endYear; i++) {\r\n    years.push(i);\r\n  }\r\n\r\n  return (\r\n    <ol className=\"YearSelector\">\r\n      {years.map((year) => (\r\n        <li key={year}>\r\n          <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { MatchDetailsCard } from \"../components/MatchDetailsCard\";\r\nimport { YearSelector } from \"../components/YearSelector\";\r\nimport \"./MatchPage.scss\";\r\n\r\nexport const MatchPage = () => {\r\n  const [matches, setMatches] = useState([]);\r\n  const { teamName, year } = useParams();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}/matches?year=${year}`\r\n      );\r\n\r\n      const matchData = await response.json();\r\n      setMatches(matchData);\r\n    })();\r\n  }, [teamName, year]);\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n        <YearSelector teamName={teamName} />\r\n      </div>\r\n      <div>\r\n        <h1 className=\"page-heading\">\r\n          {teamName} matches in {year}\r\n        </h1>\r\n        {matches.map((match) => (\r\n          <MatchDetailsCard\r\n            key={match.date}\r\n            match={match}\r\n            teamName={teamName}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MatchSmallCard.scss\";\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) => {\r\n  const otherTeam = teamName === match.team1 ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"\r\n      }\r\n    >\r\n      <span className=\"vs\">vs</span>\r\n      <h3>\r\n        <Link to={otherTeamRoute}> {otherTeam}</Link>\r\n      </h3>\r\n      <p className=\"match-result\">\r\n        {match.matchWinner} won by {match.resultMargin} {match.result}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { MatchDetailsCard } from \"../components/MatchDetailsCard\";\r\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\r\nimport \"./TeamPage.scss\";\r\n\r\nexport const TeamPage = () => {\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}`\r\n      );\r\n\r\n      const matchData = await response.json();\r\n      setTeam(matchData);\r\n    })();\r\n  }, [teamName]);\r\n\r\n  if (!team || !team.teamName) {\r\n    return <h2>Team not found</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n          data={[\r\n            {\r\n              title: \"Losses\",\r\n              value: team.totalMatches - team.totalWins,\r\n              color: \"#a34d5d\",\r\n            },\r\n            { title: \"Wins\", value: team.totalWins, color: \"#4da375\" },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <MatchDetailsCard match={team.matches[0]} teamName={team.teamName} />\r\n      </div>\r\n\r\n      {team.matches.slice(1).map((match) => (\r\n        <MatchSmallCard\r\n          key={match.date}\r\n          match={match}\r\n          teamName={team.teamName}\r\n        />\r\n      ))}\r\n      <div className=\"more-section\">\r\n        <Link\r\n          to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}\r\n        >\r\n          More &#187;\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { HashRouter as Rounter, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { MatchPage } from \"./pages/MatchPage\";\nimport { TeamPage } from \"./pages/TeamPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Rounter>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Rounter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}